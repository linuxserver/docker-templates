<?xml version="1.0"?>
<Container version="2">
  <Name>kanzi</Name>
  <Repository>ghcr.io/linuxserver/kanzi</Repository>
  <Registry>https://github.com/orgs/linuxserver/packages/container/package/kanzi/</Registry>
  <MyIP/>
  <Shell>sh</Shell>
  <Privileged>false</Privileged>
  <Support>https://forums.unraid.net/topic/79763-support-linuxserverio-kanzi/</Support>
  <Project>https://lexigr.am</Project>
  <Overview>Kanzi, formerly titled Kodi-Alexa, this custom skill is the ultimate voice remote control for navigating Kodi. It can do anything you can think of (100+ intents). This container also contains lexigram-cli to setup Kanzi with an Amazon Developer Account and automatically deploy it to Amazon.</Overview>
  <Category>MediaApp:Video MediaApp:Other Network:Other HomeAutomation:</Category>
  <WebUI/>
  <TemplateURL>https://github.com/linuxserver/docker-templates/blob/master/kanzi.xml</TemplateURL>
  <Icon>https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/kanzi.png</Icon>
  <ExtraParams/>
  <PostArgs/>
  <CPUset/>
  <DonateText>Donate</DonateText>
  <DonateLink>https://www.linuxserver.io/donate</DonateLink>
  <Description>Kanzi, formerly titled Kodi-Alexa, this custom skill is the ultimate voice remote control for navigating Kodi. It can do anything you can think of (100+ intents). This container also contains lexigram-cli to setup Kanzi with an Amazon Developer Account and automatically deploy it to Amazon.</Description>
  <Networking>
    <Mode>bridge</Mode>
    <Publish>
      <Port>
        <HostPort>8000</HostPort>
        <ContainerPort>8000</ContainerPort>
        <Protocol>tcp</Protocol>
      </Port>
    </Publish>
  </Networking>
  <Data>
    <Volume>
      <HostDir></HostDir>
      <ContainerDir>/config</ContainerDir>
      <Mode>rw</Mode>
    </Volume>
  </Data>
  <Environment>
    <Variable>
      <Value></Value>
      <Name>INVOCATION_NAME</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value></Value>
      <Name>URL_ENDPOINT</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>99</Value>
      <Name>PUID</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>100</Value>
      <Name>PGID</Name>
      <Mode/>
    </Variable>
  </Environment>
  <Labels/>
  <Config Name="Listening Port" Target="8000" Default="" Mode="tcp" Description="Listening Port" Type="Port" Display="always" Required="false" Mask="false">8000</Config>
  <Config Name="INVOCATION_NAME" Target="INVOCATION_NAME" Default="" Mode="" Description="Name used to trigger skill.  Alexa ask $INVOCATION_NAME to...." Type="Variable" Display="always" Required="false" Mask="false">kanzi</Config>
  <Config Name="URL_ENDPOINT" Target="URL_ENDPOINT" Default="" Mode="" Description="External URL for Amazon to send requests to  https://kanzi.server.com or https://server.com/kanzi" Type="Variable" Display="always" Required="false" Mask="false">https://server.com/kanzi/</Config>
  <Config Name="AppData Config Path" Target="/config" Default="" Mode="rw" Description="AppData Config Path" Type="Path" Display="advanced-hide" Required="false" Mask="false"></Config>
  <Config Name="PUID" Target="PUID" Default="" Mode="" Description="PUID" Type="Variable" Display="advanced" Required="false" Mask="false">99</Config>
  <Config Name="PGID" Target="PGID" Default="" Mode="" Description="PGID" Type="Variable" Display="advanced" Required="false" Mask="false">100</Config>
</Container>
