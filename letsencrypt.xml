<?xml version="1.0"?>
<Container version="2">
  <TemplateURL>https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/letsencrypt.xml</TemplateURL>
  <Name>letsencrypt</Name>
  <Date>2016-11-08</Date>
<Changes>[center][img width='300px' src='https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/linuxserver_small.png'][/center]

  [center][font size=4]letsencrypt Change Log[/font][/center]
  [font size=4]07-11-2016[/font]
  - Initial release.
  </Changes>
  <Repository>linuxserver/letsencrypt</Repository>
  <Registry>https://hub.docker.com/r/linuxserver/letsencrypt/</Registry>
  <Network>bridge</Network>
  <Privileged>true</Privileged>
  <Project>https://letsencrypt.org/</Project>
  <Support>http://lime-technology.com/forum/index.php?topic=53542.0</Support>
  <Overview>This container sets up an Nginx webserver and reverse proxy with php support and a built-in letsencrypt client that automates free SSL server certificate generation and renewal processes. It also contains fail2ban for intrusion prevention.&#xD;
  &#xD;
  Before running this container, make sure that the url and subdomains are properly forwarded to this container's host.&#xD;
  &#xD;
  - Port 443 on the internet side of the router should be forwarded to this container's port 443.&#xD;
  - If you need a dynamic dns provider, you can use the free provider duckdns.org where the url will be yoursubdomain.duckdns.org and the subdomains    can be www,ftp,cloud&#xD;
  - The container detects changes to url and subdomains, revokes existing certs and generates new ones during start. &#xD;
  - It also detects changes to the DHLEVEL parameter and replaces the dhparams file.&#xD;
  &#xD;
  - If you'd like to password protect your sites, you can use htpasswd. Run the following command on your host to generate the htpasswd file docker exec -it letsencrypt htpasswd -c /config/nginx/.htpasswd &amp;lt;username&amp;gt;</Overview>
  <Description>Nginx webserver and reverse proxy with php support and a built-in letsencrypt client. It also contains fail2ban for intrusion prevention.</Description>
  <Category>Tools: Network:Web Status:Stable</Category>
  <WebUI>https://[IP]:[PORT:443]</WebUI>
  <TemplateURL/>
  <Icon>https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/letsencrypt.png</Icon>
  <ExtraParams/>
  <Networking>
    <Mode>bridge</Mode>
    <Publish>
      <Port>
        <HostPort></HostPort>
        <ContainerPort>80</ContainerPort>
        <Protocol>tcp</Protocol>
      </Port>
      <Port>
        <HostPort></HostPort>
        <ContainerPort>443</ContainerPort>
        <Protocol>tcp</Protocol>
      </Port>
    </Publish>
  </Networking>
  <Data>
    <Volume>
      <HostDir></HostDir>
      <ContainerDir>/config</ContainerDir>
      <Mode>rw</Mode>
    </Volume>
  </Data>
  <Environment>
    <Variable>
      <Value></Value>
      <Name>EMAIL</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value></Value>
      <Name>URL</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>www,</Value>
      <Name>SUBDOMAINS</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>false</Value>
      <Name>ONLY_SUBDOMAINS</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>2048</Value>
      <Name>DHLEVEL</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>99</Value>
      <Name>PUID</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>100</Value>
      <Name>PGID</Name>
      <Mode/>
    </Variable>
  </Environment>
  <Config Name="http" Target="80" Default="" Mode="tcp" Description="Container Port: 80" Type="Port" Display="always" Required="false" Mask="false"></Config>
  <Config Name="https" Target="443" Default="" Mode="tcp" Description="Container Port: 443" Type="Port" Display="always" Required="false" Mask="false"></Config>
  <Config Name="Email" Target="EMAIL" Default="" Mode="" Description="Your e-mail address for cert registration" Type="Variable" Display="always" Required="false" Mask="false"></Config>
  <Config Name="Domain Name" Target="URL" Default="" Mode="" Description="the top url you have control over customdomain.com if you own it, or customsubdomain.ddnsprovider.com if using dynamic dns)" Type="Variable" Display="always" Required="false" Mask="false"></Config>
  <Config Name="Subdomain(s)" Target="SUBDOMAINS" Default="www," Mode="" Description="Subdomains you'd like the cert to cover (comma separated, no spaces) ie. www,ftp,cloud," Type="Variable" Display="always" Required="false" Mask="false"></Config>
  <Config Name="Only Subdomains" Target="ONLY_SUBDOMAINS" Default="false" Mode="" Description="if you wish to get certs only for certain subdomains, but not the main domain (main domain may be hosted on another machine and cannot be validated), set this to true" Type="Variable" Display="always" Required="false" Mask="false">false</Config>
  <Config Name="Diffie Hellman" Target="DHLEVEL" Default="2048" Mode="" Description="Diffie Hellman parameters bit value.  Can be 1024, 2048 or 4096.  (Default is 2048)" Type="Variable" Display="always" Required="false" Mask="false"></Config>
  <Config Name="PUID" Target="PUID" Default="99" Mode="" Description="UID for permissions.  Do not change unless you know what you're doing." Type="Variable" Display="advanced-hide" Required="true" Mask="false"></Config>
  <Config Name="PGID" Target="PGID" Default="100" Mode="" Description="GID for permissions.  Do not change unless you know what you're doing." Type="Variable" Display="advanced-hide" Required="true" Mask="false"></Config>
  <Config Name="AppData Config Path" Target="/config" Default="/mnt/user/appdata/letsencrypt" Mode="rw" Description="Container Path: /config" Type="Path" Display="always" Required="true" Mask="false"></Config>
<DonateText>Donations</DonateText>
<DonateLink>https://www.linuxserver.io/donations/</DonateLink>
<DonateImg>https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/donate.png</DonateImg>
<BaseImage>lsiobase/alpine.nginx:3.6</BaseImage>
</Container>
